// Проверка значения из диапазона
// let age = prompt('Попасть в диапохон', '');
//
// if (age >=14 && age <=90) {
//     alert('Ура, попали');
// }
// else {
//     alert ('НЕ ПОПАЛИ');
// }

//Проверка значения вне диапазона

// let age1 = prompt('вне диапозона', '');
//
// if (age1 != 14 && age1 <=14 && age1 != 90 && age1 <= 90) {
//     alert ('Вне диапозона');
// }
// else {
//     alert('сюда нельзя');
// }
//

//Первый вариант:
let age = prompt(' 14 - 90 нельзя', '');
    if (!(age >= 14 && age <= 90)) {
        alert ('noup');
    }
  //      Второй вариант:

    if (age < 14 || age > 90)





//         Вопрос о "if"
// важность: 5
// Какие из перечисленных ниже alert выполнятся?
//
//     Какие конкретно значения будут результатами выражений в условиях if(...)?

// if (-1 || 0) alert( 'first' );
// if (-1 && 0) alert( 'second' );
// if (null || -1 && 1) alert( 'third' );
//
// // Выполнится.
// // Результат -1 || 0 = -1, в логическом контексте true
// if (-1 || 0) alert( 'first' );
//
// // Не выполнится
// // -1 && 0 = 0,  в логическом контексте false
// if (-1 && 0) alert( 'second' );
//
// // Выполнится
// // оператор && имеет больший приоритет, чем ||
// // так что -1 && 1 выполнится раньше
// // вычисления: null || -1 && 1  ->  null || 1  ->  1
// if (null || -1 && 1) alert( 'third' );



















// alert( null || 2 || undefined ); //2
//
// alert( alert(1) || 2 || alert(3) ); // 2

// Вызов alert не возвращает значения, или, иначе говоря, возвращает undefined.
//
//     Первый оператор ИЛИ || выполнит первый alert(1).
//     Получит undefined и пойдёт дальше, ко второму операнду в поисках истинного значения.
//     Так как второй операнд 2 является истинным, то вычисления завершатся, результатом undefined || 2 будет 2, которое будет выведено внешним alert( .... ).
// Второй оператор || не будет выполнен, выполнение до alert(3) не дойдёт, поэтому 3 выведено не будет.

// И
alert( 1 && null && 2 ); //

// Ответ: 1, а затем undefined.
//
// alert( alert(1) && alert(2) );
// Вызов alert не возвращает значения, или, иначе говоря, возвращает undefined.
//
//     Поэтому до правого alert дело не дойдёт, вычисления закончатся на левом.


//Что выведет код ниже?

    alert( null || 2 && 3 || 4 );
// решение
// Ответ: 3.

alert( null || 2 && 3 || 4 );
// Приоритет оператора && выше, чем ||, поэтому он выполнится первым.
//
//     Результат 2 && 3 = 3, поэтому выражение приобретает вид:

    null || 3 || 4
// Теперь результатом является первое истинное значение: 3.

alert( 10 && null || 2 && 3 || 4 ); //10