// let a = 1, b = 1;
//
// let c = ++a; // ?
// let d = b++; // ?\
//
// console.log(a);
// console.log(b);
// console.log(c);
// console.log(d);
//
// //Чему будут равны переменные a и x после исполнения кода в примере ниже?
// let a1 = 2;
// let a2 = 3;
//
// let x = 1 + (a1 *= 2); // 5
// let y = x + (a2 *= 3); // 5 + (3 * 3) = 14
// console.log(a1);
// console.log(x);
// console.log(y);

// Преобразование типов
// важность: 5
// Какой результат будет у выражений ниже?

console.log("" + 1 + 0); // 10
console.log("" - 1 + 0);// -1
console.log(true + false);// 1
console.log(6 / "3");//2
console.log("2" * "3");// 6
console.log(4 + 5 + "px"); // 9 px
console.log("$" + 4 + 5);// $ 45
console.log("4" - 2);// 2
console.log("4px" - 2); // NaN
console.log(7 / 0); // infinity
console.log("  -9  " + 5); // -9 + 5
console.log("  -9  " - 5); // -14
console.log(null + 1); // 1
console.log(undefined + 1); // NaN
console.log(" \t \n" - 2); // -2


// Сложение со строкой "" + 1 преобразует 1 к строке: "" + 1 = "1", и в следующем случае "1" + 0 работает то же самое правило.
//     Вычитание - (как и большинство математических операторов) работает только с числами, пустая строка "" приводится к 0.
// Сложение со строкой превращает число 5 в строку и добавляет к строке.
//     Вычитание всегда преобразует к числу, значит строка " -9 " становится числом -9 (пробелы по краям обрезаются).
// null становится 0 после численного преобразования.
//     undefined становится NaN после численного преобразования.
//     Пробельные символы, такие    как \t и \n, по краям строки игнорируются при преобразовании в число, так что строка " \t \n", аналогично пустой строке, становится 0 после численного преобразования.

let a = +prompt("Первое число?", 1);
let b = +prompt("Второе число?", 2);

alert(+a +  +b); // 12